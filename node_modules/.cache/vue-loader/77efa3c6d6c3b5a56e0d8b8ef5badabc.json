{"remainingRequest":"/Users/tachiyoshiki/VuetodoApp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tachiyoshiki/VuetodoApp/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tachiyoshiki/VuetodoApp/src/App.vue","mtime":1560517939459},{"path":"/Users/tachiyoshiki/VuetodoApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tachiyoshiki/VuetodoApp/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tachiyoshiki/VuetodoApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tachiyoshiki/VuetodoApp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// https://jp.vuejs.org/v2/examples/todomvc.html\nvar STORAGE_KEY = 'todos-vuejs-demo'\n\nvar todoStorage = {\n  fetch: function() {\n    var todos = JSON.parse(\n      localStorage.getItem(STORAGE_KEY) || '[]'\n    )\n    todos.forEach(function(todo, index) {\n      todo.id = index\n    })\n    todoStorage.uid = todos.length\n    return todos\n  },\n  save: function(todos) {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(todos))\n  }\n}\n\nexport default {\n el: '#app',\n    data(){\n      return {\n        todos: [],\n        options: [\n            {value: -1, label: 'すべて'},\n            {value: 0, label: '作業中'},\n            {value: 1, label: '完了'}\n        ],\n        current: -1\n      }\n    },\n    computed: {\n        computedTodos: function(){\n            return this.todos.filter(function(el){\n                return this.current < 0 ? true : this.current === el.state\n            },this)\n        },\n        labels() {\n            return this.options.reduce(function(a,b){\n                return Object.assign(a,{ [b.value] : b.label })\n            }, {})\n        }\n    },\n    watch: {\n        todos: {\n            handler: function(todos){\n                todoStorage.save(todos)\n            },\n            deep: true\n        }\n    },\n    created(){\n        this.todos = todoStorage.fetch()\n    },\n    methods: {\n        doAdd: function(){\n            var comment = this.$refs.comment\n            if (!comment.value.length){\n                // 入力がなければ何もしないで return\n                return \n            }\n            this.todos.push({\n                id: todoStorage.uid++,\n                comment: comment.value,\n                state: 0\n            })\n            comment.value=''\n        },\n        doChangeState: function(item){\n            item.state = item.state ? 0 : 1\n        },\n        doRemove: function(item) {\n            var index = this.todos.indexOf(item)\n            this.todos.splice(index,1)\n        },\n\n    }\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>ToDoリスト</h1>\n\n    <!-- ★STEP11 -->\n    <label v-for=\"(label,index) in options\" :key=\"index\" >\n      <input type=\"radio\"\n        v-model=\"current\"\n        v-bind:value=\"label.value\">{{ label.label }}\n    </label>\n      \n    <!-- ★STEP12 -->\n    （{{ computedTodos.length }} 件を表示）\n\n    <!-- ★STEP4 リスト用テーブル -->\n    <table>\n      <thead v-pre>\n        <tr>\n          <th class=\"id\">ID</th>\n          <th class=\"comment\">コメント</th>\n          <th class=\"state\">状態</th>\n          <th class=\"button\">-</th>\n        </tr>\n      </thead>\n      <tbody>\n        <!-- ★STEP5 ToDo の要素をループ -->\n        <tr\n          v-for=\"item in computedTodos\"\n          v-bind:key=\"item.id\"\n          v-bind:class=\"{done:item.state}\">\n          <th>{{ item.id }}</th>\n          <td>{{ item.comment }}</td>\n          <td class=\"state\">\n            <!-- ★STEP10 状態変更ボタン -->\n            <button v-on:click=\"doChangeState(item)\">\n              {{ labels[item.state] }}\n            </button>\n          </td>\n          <td class=\"button\">\n            <!-- ★STEP10 削除ボタン -->\n            <button v-on:click.d=\"doRemove(item)\">\n              削除\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <p>※削除ボタンはdを押しながらクリックして下さい</p>\n\n    <!-- ★STEP6 -->\n    <h2>新しい作業の追加</h2>\n    <form class=\"add-form\" v-on:submit.prevent=\"doAdd\">\n      <!-- コメント入力フォーム -->\n      コメント <input type=\"text\" ref=\"comment\">\n      <!-- 追加ボタンのモック -->\n      <button type=\"submit\">追加</button>\n    </form>\n    <body>\n    </body>\n  </div>\n</template>\n\n\n\n\n<script>\n// https://jp.vuejs.org/v2/examples/todomvc.html\nvar STORAGE_KEY = 'todos-vuejs-demo'\n\nvar todoStorage = {\n  fetch: function() {\n    var todos = JSON.parse(\n      localStorage.getItem(STORAGE_KEY) || '[]'\n    )\n    todos.forEach(function(todo, index) {\n      todo.id = index\n    })\n    todoStorage.uid = todos.length\n    return todos\n  },\n  save: function(todos) {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(todos))\n  }\n}\n\nexport default {\n el: '#app',\n    data(){\n      return {\n        todos: [],\n        options: [\n            {value: -1, label: 'すべて'},\n            {value: 0, label: '作業中'},\n            {value: 1, label: '完了'}\n        ],\n        current: -1\n      }\n    },\n    computed: {\n        computedTodos: function(){\n            return this.todos.filter(function(el){\n                return this.current < 0 ? true : this.current === el.state\n            },this)\n        },\n        labels() {\n            return this.options.reduce(function(a,b){\n                return Object.assign(a,{ [b.value] : b.label })\n            }, {})\n        }\n    },\n    watch: {\n        todos: {\n            handler: function(todos){\n                todoStorage.save(todos)\n            },\n            deep: true\n        }\n    },\n    created(){\n        this.todos = todoStorage.fetch()\n    },\n    methods: {\n        doAdd: function(){\n            var comment = this.$refs.comment\n            if (!comment.value.length){\n                // 入力がなければ何もしないで return\n                return \n            }\n            this.todos.push({\n                id: todoStorage.uid++,\n                comment: comment.value,\n                state: 0\n            })\n            comment.value=''\n        },\n        doChangeState: function(item){\n            item.state = item.state ? 0 : 1\n        },\n        doRemove: function(item) {\n            var index = this.todos.indexOf(item)\n            this.todos.splice(index,1)\n        },\n\n    }\n}\n</script>\n\n<style>\n* {\n    box-sizing: border-box;\n  }\n  #app {\n    max-width: 640px;\n    margin: 0 auto;\n  }\n  table {\n    width: 100%;\n    border-collapse: collapse;\n  }\n  thead th {\n    border-bottom: 2px solid #0099e4; /*#d31c4a */\n    color: #27e021;\n  }\n  th,\n  th {\n    padding: 0 8px;\n    line-height: 40px;\n  }\n  thead th.id {\n    width: 50px;\n  }\n  thead th.state {\n    width: 100px;\n  }\n  thead th.button {\n    width: 60px;\n  }\n  tbody td.button, tbody td.state {\n    text-align: center;\n  }\n  tbody tr td,\n  tbody tr th {\n    border-bottom: 1px solid #ccc;\n    transition: all 0.4s;\n  }\n  tbody tr.done td,\n  tbody tr.done th {\n    background: #f8f8f8;\n    color: #bbb;\n  }\n  tbody tr:hover td,\n  tbody tr:hover th {\n    background: #f4fbff;\n  }\n  button {\n    border: none;\n    border-radius: 20px;\n    line-height: 24px;\n    padding: 0 8px;\n    background: #0099e4;\n    color: #fff;\n    cursor: pointer;\n  }\n  body {\n  background-image: url(\"./assets/marine.jpg\");\n   background-position: center center;\n   \n  /* 画像をタイル状に繰り返し表示しない */\n  background-repeat: no-repeat;\n   \n  /* コンテンツの高さが画像の高さより大きい時、動かないように固定 */\n  background-attachment: fixed;\n   \n  /* 表示するコンテナの大きさに基づいて、背景画像を調整 */\n  background-size: cover;\n   \n  /* 背景画像が読み込まれる前に表示される背景のカラー */\n  background-color: #464646;\n}\n</style>\n"]}]}